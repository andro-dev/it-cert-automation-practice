#!/usr/bin/env python3

import json
import locale
import sys


def load_data(filename):
    """Loads the contents of filename as a JSON file."""
    with open(filename) as json_file:
        data = json.load(json_file)
    return data


'''
Example of data element:
    {
            "id": 47,
            "car": {
                    "car_make": "Lamborghini",
                    "car_model": "MurciÃ©lago",
                    "car_year": 2002
            },
            "price": "$13724.05",
            "total_sales": 149
    }
'''


def format_car(car):
    """Given a car dictionary, returns a nicely formatted name."""
    return "{} {} ({})".format(car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
    """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
    max_revenue = {"revenue": 0}
    most_sales = {"total_sales": -1}
    sales_per_year = {}
    for item in data:
        # Calculate the revenue generated by this model (price * total_sales)
        # We need to convert the price from "$1234.56" to 1234.56
        item_price = locale.atof(item["price"].strip("$"))
        item_revenue = item["total_sales"] * item_price
        if item_revenue > max_revenue["revenue"]:
            item["revenue"] = item_revenue
            max_revenue = item
        # TODO: also handle max sales
        if item["total_sales"] > most_sales["total_sales"]:
            most_sales = item
        # TODO: also handle most popular car_year
        update_sales_per_year(item, sales_per_year)

    max_year = max(sales_per_year, key=sales_per_year.get)
    sales = sales_per_year[max_year]

    summary = [
        "The {} generated the most revenue: ${}".format(format_car(max_revenue["car"]), max_revenue["revenue"]),
        f"The {format_car(most_sales['car'])} had the most sales: {most_sales['total_sales']}",
        f"The most popular year was {max_year} with {sales} sales."
    ]

    return summary


def update_sales_per_year(item, sales_per_year):
    year = item["car"]["car_year"]
    if year in sales_per_year.keys():
        sales_per_year[year] += item["total_sales"]
    else:
        sales_per_year[year] = item["total_sales"]

def cars_dict_to_table(car_data):
    """Turns the data in car_data into a list of lists."""
    table_data = [["ID", "Car", "Price", "Total Sales"]]
    for item in car_data:
        table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
    return table_data


def main(argv):
    """Process the JSON data and generate a full report out of it."""
    data = load_data("./../car_sales.json")
    summary = process_data(data)
    print(summary)
    # TODO: turn this into a PDF report

    # TODO: send the PDF report as an email attachment


if __name__ == "__main__":
    main(sys.argv)
